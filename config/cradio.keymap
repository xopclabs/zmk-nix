// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_ru.h"

#define ENG 0
#define RU 1
#define SYMB 2
#define NUM 3
#define FUNC 4
#define OPTS 5

#define LANG_SW LS(LALT)
#define LANG_RU LA(F13)
#define LANG_ENG LA(F14)


/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <205>;
            bindings = <&kp>, <&kp>;
        };
        sk: sticky_key {
            compatible = "zmk,behavior-sticky-key";
            release-after-ms = <1000>;
            quick-release;
        };
        sl: sticky_layer {
            compatible = "zmk,behavior-sticky-key";
            release-after-ms = <1000>;
        };      
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM FUNC>;
            then-layer = <OPTS>;
        };
    };
    macros {
        lang_sw: lang_sw {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LANG_SW>
                , <&macro_tap &tog RU>
                ;
        };
        to_ru: lang_ru {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LANG_RU>
                , <&macro_tap &tog RU>
                ;
        };
        to_eng: lang_en {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LANG_ENG>
                , <&macro_tap &tog ENG>
                ;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        eng_layer {
            bindings = <
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp SEMI
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &kp O
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp FSLH
                                       &lt SYMB SPACE   &sl FUNC      &lt NUM ESC  &ht LSHIFT BSPC
            >;
        };

        ru_layer {
            bindings = <
            &kp RU_F   &kp RU_YA  &kp RU_SS  &kp RU_P   &kp RU_B     &kp RU_H  &kp RU_L  &kp RU_Y   &kp RU_JI  &kp RU_ZH
            &kp RU_A   &kp RU_R   &kp RU_S   &kp RU_T   &kp RU_G     &kp RU_M  &kp RU_N  &kp RU_E   &kp RU_I   &kp RU_O
            &kp RU_CH  &kp RU_C   &kp RU_K   &kp RU_D   &kp RU_YI    &kp RU_Z  &kp RU_V  &kp RU_SH  &kp RU_YU  &kp RU_IE
                                       &lt SYMB SPACE   &sl FUNC     &lt NUM ESC  &ht LSHIFT BSPC
            >;
        };

        symb_layer {
            bindings = <
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp SEMI
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &kp O
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp FSLH
                                       &lt SYMB SPACE   &sl FUNC      &lt NUM ESC  &ht LSHIFT BSPC
            >;
        };

        num_layer {
            bindings = <
            &none      &none      &none      &none      &none          &none      &none      &none      &none      &none
            &kp N7     &kp N5     &kp N3     &kp N1     &kp N9         &kp N8     &kp N0     &kp N2     &kp N4     &kp N6
            &none      &none      &none      &none      &none          &none      &none      &none      &none      &none
                                             &none      &sl FUNC       &none      &none
            >;
        };

        func_layer {
            bindings = <
            &kp F1      &kp F2      &kp F3      &kp F4      &kp F5         &kp F6        &kp F7        &kp F8      &kp F9     &kp F10
            &sk LGUI    &sk LALT    &sk LSHIFT  &sk LCTRL   &kp G          &kp PSCRN     &kp LEFT      &kp DOWN    &kp UP     &kp RIGHT
            &none       &none       &none       &kp DEL     &lang_sw       &kp C_VOL_UP  &kp C_VOL_DN  &kp C_MUTE  &kp F11    &kp F12
                                                &none       &none          &lt NUM ESC   &none
            >;
        };
        opts_layer {
            bindings = <
            &none           &none       &none      &none      &bootloader    &none  &none         &none         &none         &none
            &bt BT_CLR_ALL  &sys_reset  &none      &none      &none          &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
            &none           &bt BT_CLR  &none      &none      &none          &none  &none         &none         &none         &none
                                                   &none      &none          &none  &none
            >;
        };

    };
};
